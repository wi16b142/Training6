<Window x:Class="Training6.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Training6"
        xmlns:converter="clr-namespace:Training6.Converter"
        mc:Ignorable="d"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        Title="MainWindow" Height="350" Width="577.073">
    <!--add the namespace where the converter are located!-->
    
    <!--autogenerated if binding the converter via the property window-->
    <Window.Resources>
        <converter:IntToBrush x:Key="IntToBrush"/>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="64*"/>
            <RowDefinition Height="257*"/>
        </Grid.RowDefinitions>

        <TabPanel Margin="0,0,0.4,239.8" Grid.RowSpan="2">
            <Label Content="Filter(ID Type)" Margin="19,10,-18.8,-9.6"/>
            <ComboBox ItemsSource="{Binding Types}" SelectedItem="{Binding SelectedFilter, UpdateSourceTrigger=PropertyChanged}" Height="30" Margin="18.8,10,-128.6,-9.6"/>
            <Button Content="Act as Client" Command="{Binding ClientBtnClick}" Width="100" Height="30" Margin="134.4,10,-134.4,-9.6" />
            <Button Content="Act as Server" Command="{Binding ServerBtnClick}" Width="100" Height="30" Margin="138.6,10,-138.6,-9.6" />
        </TabPanel>

        <DataGrid Grid.Row="1" Margin="10,7,10.4,9.8" CanUserAddRows="True" AutoGenerateColumns="False" ItemsSource="{Binding Persons}" SelectedItem="{Binding SelectedData}">
            <DataGrid.Columns>
                <!--Use UpdateSourceTrigger to edit the point of time, when the property raises a change. e.g. lost focus etc. -->
                <DataGridTextColumn Binding="{Binding Firstname}" Width="100" ClipboardContentBinding="{x:Null}" Header="Firstname"/>
                <DataGridTextColumn Binding="{Binding Lastname}" Width="100" ClipboardContentBinding="{x:Null}" Header="Lastname"/>
                <DataGridTextColumn Binding="{Binding Age, UpdateSourceTrigger=PropertyChanged}"  Width="50" ClipboardContentBinding="{x:Null}" Header="Age"/>
                <DataGridTextColumn Binding="{Binding Id, UpdateSourceTrigger=PropertyChanged}"  Width="50" ClipboardContentBinding="{x:Null}" Header="ID"/>
                
                <DataGridTemplateColumn  ClipboardContentBinding="{x:Null}"  Width="100" Header="Type">
                    <!--Template which is active when editing the cell-->
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <!--Bind to the possible values of the combobox (but bind to the ancestor, otherwise it searches for the values in the wrong VM)-->
                            <!--Preselect the item that was initially selected via the selecteditem property-->
                            <ComboBox ItemsSource="{Binding DataContext.Types, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" SelectedItem="{Binding IdType}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <!--Template which is active when displaying the cell-->
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Content="{Binding IdType}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Rating" Width="50">
                    <!--Template which is active when editing the cell-->
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Rating}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <!--Template which is active when displaying the cell-->
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!--Add this binding via the property window - Bruch->Fill->DataBinding+Converter to automatically add window resource -->
                            <Ellipse Width="15" Height="15" Fill="{Binding Rating, Converter={StaticResource IntToBrush}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Window>
